{
  "_args": [
    [
      {
        "raw": "ethereumjs-util@github:kejace/ethereumjs-util",
        "scope": null,
        "escapedName": "ethereumjs-util",
        "name": "ethereumjs-util",
        "rawSpec": "github:kejace/ethereumjs-util",
        "spec": "github:kejace/ethereumjs-util",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:kejace/ethereumjs-util.git",
          "sshUrl": "git+ssh://git@github.com/kejace/ethereumjs-util.git",
          "httpsUrl": "git+https://github.com/kejace/ethereumjs-util.git",
          "gitUrl": "git://github.com/kejace/ethereumjs-util.git",
          "shortcut": "github:kejace/ethereumjs-util",
          "directUrl": "https://raw.githubusercontent.com/kejace/ethereumjs-util/master/package.json"
        }
      },
      "/Users/mathias/projects/other/JSLayout/Demo/node_modules/ethereumjs-tx"
    ]
  ],
  "_from": "kejace/ethereumjs-util",
  "_id": "ethereumjs-util@2.0.3",
  "_inCache": true,
  "_location": "/ethereumjs-util",
  "_phantomChildren": {
    "brorand": "1.0.6",
    "hash.js": "1.0.3",
    "inherits": "2.0.3"
  },
  "_requested": {
    "raw": "ethereumjs-util@github:kejace/ethereumjs-util",
    "scope": null,
    "escapedName": "ethereumjs-util",
    "name": "ethereumjs-util",
    "rawSpec": "github:kejace/ethereumjs-util",
    "spec": "github:kejace/ethereumjs-util",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:kejace/ethereumjs-util.git",
      "sshUrl": "git+ssh://git@github.com/kejace/ethereumjs-util.git",
      "httpsUrl": "git+https://github.com/kejace/ethereumjs-util.git",
      "gitUrl": "git://github.com/kejace/ethereumjs-util.git",
      "shortcut": "github:kejace/ethereumjs-util",
      "directUrl": "https://raw.githubusercontent.com/kejace/ethereumjs-util/master/package.json"
    }
  },
  "_requiredBy": [
    "/ethereumjs-tx"
  ],
  "_resolved": "git://github.com/kejace/ethereumjs-util.git#47019a42e59751a16c790a4b86cbecc32c33101f",
  "_shasum": "7ca7db4eee96176fdddfaeff3857251e3c2f918e",
  "_shrinkwrap": null,
  "_spec": "ethereumjs-util@github:kejace/ethereumjs-util",
  "_where": "/Users/mathias/projects/other/JSLayout/Demo/node_modules/ethereumjs-tx",
  "author": {
    "name": "mjbecze",
    "email": "mjbecze@gmail.com"
  },
  "browser": {
    "sha3": "browserify-sha3"
  },
  "bugs": {
    "url": "https://github.com/ethereum/ethereumjs-utils/issues"
  },
  "dependencies": {
    "bn.js": "^3.1.2",
    "elliptic": "^5.0.0",
    "rlp": "^2.0.0",
    "sha3": "github:kejace/browserify-sha3"
  },
  "description": "a collection of utility functions for Ethereum",
  "devDependencies": {
    "mocha": "^2.1.0",
    "standard": "^5.3.1"
  },
  "gitHead": "47019a42e59751a16c790a4b86cbecc32c33101f",
  "homepage": "https://github.com/ethereum/ethereumjs-utils",
  "keywords": [
    "ethereum",
    "utilties"
  ],
  "license": "MPL-2.0",
  "main": "index.js",
  "name": "ethereumjs-util",
  "optionalDependencies": {},
  "readme": "# SYNOPSIS\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n [![Build Status](https://travis-ci.org/ethereum/ethereumjs-util.svg)](https://travis-ci.org/ethereum/ethereumjs-util)  [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/ethereum/ethereumjs-lib?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) or #ethereumjs on freenode  \n \nA collection of utility functions for ethereum. It can be used in node.js or can be in the browser with browserify.\n\n# API\n## properties\n - `MAX_INTEGER`  - The max interger that the VM can handle\n -  `TWO_POW256` - 2^256\n -  `SHA3_NULL` - SHA3-256 hash of `null`\n -  `SHA3_RLP_ARRAY` - SHA3-256 of an rlp of an empty array\n -  `SHA3_RLP` - SHA3-256 hash of the rlp of `null`\n -  `ETH_UNITS` - an array of ethereum units\n -  [`BN`](https://github.com/indutny/bn.js)\n -  [`rlp`](https://github.com/wanderer/rlp)\n\n## methods \n### `zeros(number)`\nReturns buffer filled with 0's  \n**Parameters** \n- `number` - the number bytes to to return  \n\n**Return:** `buffer`\n\n### `pad(val, length)`\npads an `array` or `buffer` with leading zeros till it has `length` bytes  \n**Parameters** \n- `val`  - the value to pad\n- `length` - the of the resulting value  \n\n**Return:** `array` or `buffer`\n\n### `unpad(val)`\nTrims leading zeros from a buffer or an array  \n**Parameters** \n- `val` - a `buffer` or and `Array` to unpad  \n\n**Return:** `buffer` or and `Array`\n\n### `toBufer(val)`\nAttemps to turn a value into a Buffer  \n**Parameters** \n- `val` the \n\n**Return:** `Buffer`\n\n### `intToHex(int)`\nConverts an `Integer` into a hex `String`  \n**Parameters** \n- `int`  \n\n**Return:** `String`\n\n### `intToBuffer(int)`\nConverts an `Integer` to a `Buffer`  \n**Parameters** \n- `int`  \n\n**Return:** `Buffer`\n\n### `bufferToInt(buf)`\nconverts a `Buffer` to an `Interger`  \n**Parameters** \n- `buf`  \n\n**Return:** `Interger`\n\n### `fromSigned(buf)`\ninterpets a `Buffer` as a signed `Integer`  \n**Parameters** \n- `buf`  \n\n**Return:** [`BN.js`](https://github.com/indutny/bn.js)\n\n### `toUnsigned(num)`\nConverts a [`BN.js`](https://github.com/indutny/bn.js) to an unsigned interger   \n**Parameters**   \n- `num` - a [`BN.js`](https://github.com/indutny/bn.js)  \n\n**Return:** `buffer`\n\n### `publicToAddress(pubKey)`\nReturns the ethereum address of a given public key   \n**Parameters**  \n- `pubKey` - the public key as a `buffer`  \n\n**Return:** : `buffer`\n\n### `privateToAddress(privateKey)`\nReturns the ethereum address of a given private key  \n**Parameters**  \n- `privateKey` - the private key as a `buffer`  \n\n**Return:** `Buffer`\n\n### `privateToPublic(privateKey)`\nReturns the ethereum public key of a given private key  \n**Parameters**  \n- `privateKey` - the private key as a `buffer`\n\n**Return:** `Buffer`\n\n### `generateAddress(from, nonce)` \nGenerates an address of a newly created contract. Don't forget to incerment the nonce to get the correct address.  \n**Parameters**  \n- `from` - the address of the account creating the contract\n- `nonce` - the creating accounts nonce  \n\n**Return:** `Buffer`\n\n### `sha3(a, bytes)`  \nReturns a sha3 of `a` of the length of `bytes`  \n**Parameters** \n- `a` the value to hash\n- `bytes` how many bytes the hash should be  \n\n**Return:** `Buffer`  \n\n### `printBA(ba)`\nPrint a Buffer Array  \n**Parameters**   \n- `ba` - an `Array` of `Buffers`  \n\n**Return:** a Buffer Array\n\n### `baToJSON(ba)`\nconverts a buffer array to JSON  \n**Parameters** \n- `ba` - an `Array` of `Buffers`  \n\n**Return:** a JSON Object\n\n### `isHexPrefixed(String)`\nReturns a Boolean on whether or not the a sting starts with `0x`  \n**Parameters** \n- String - a `String`   \n\n**Return:** `String` \n\n### `stripHexPrefix(String)`\nRemoves `0x` from a given String  \n**Parameters** \n- String - a `String`   \n\n**Return:** `String`\n\n### `addHexPrefix(String)`\nAdds `0x` to a given string if it does not already start with `0x`  \n**Parameters**   \n- `string`  \n\n**Return:** `string`\n\n### `defineProperties(self, fields)`\ndefines properties on a `Object`. It make the assumtion that underlying data is binary.\n**Parameters**   \n- `self` - the `Object` to define properties on\n- `fields` - an array fields to define. Fields can contain\n - `name` the name of the properties\n - `length` the number of bytes the field can have\n - `allowLess` if the field can be less than the `length` \n - `allowEmpty`\n\n### `validate(fields, data)`\nValidate defined fields  \n**Parameters**   \n- `fields`\n- `data` \n\n**Return:** `Boolean`\n\n# TESTING\nNode.js Tests use Mocha. Test in the browser use Testling.\n\n# LICENSE\nMPL-2.0\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereum/ethereumjs-utils.git"
  },
  "scripts": {
    "compile": "browserify index.js -s ethUtils > ethUtils.js",
    "test": "standard ./index.js && mocha ./test/"
  },
  "testling": {
    "browsers": [
      "ie/9..latest",
      "firefox/15..latest",
      "chrome/22..latest"
    ],
    "harness": "mocha-bdd",
    "files": [
      "test/index.js"
    ]
  },
  "version": "2.0.3"
}
